import { Telegraf } from "telegraf";
import User from "./src/User.js";
import Event from "./src/Event.js";
import connectDb from "./src/config/Db.js";
import {message} from "telegraf/filters"
import OpenAI from 'openai';
import { model } from "mongoose";


var bot = new Telegraf(process.env.TELEGRAM_API);


const openai = new OpenAI({
    apiKey: process.env['OPEN_AI'], // This is the default and can be omitted
  });
  

try{
    connectDb();
    console.log('Database connected successfully');
}
catch(err){
    console.log(err);
    process.kill(process.pid, 'SIGTERM');
}


bot.start( async (ctx) => {

    const form = ctx.message.from;

    console.log('form', form );

    try{
        await User.findOneAndUpdate({tgId: form.id}, {
           
            name: form.first_name,
            username: form.username,
            isBot: form.is_bot
        }, {upsert: true, new: true});

        await ctx.reply(`Welcome ${form.first_name}, I WILL WRITING HIGHLY ENGAGING CONTENT FOR YOU!, PLEASE SEND ME A PROMPT TO GET STARTED!`);

    }
    catch(err){
        console.log(err);

        await ctx.reply('An error occured while trying to save your data, please try again later');
    }



   
  
});

bot.help((ctx) => ctx.reply('Send me a message @Exthi'));

bot.command('DO', async (ctx) => {
   
    const from = ctx.update.message.from;

    const startOfDay = new Date();
    startOfDay.setHours(0, 0, 0, 0);
    
    const endOfDay = new Date();
    endOfDay.setHours(23, 59, 59, 999); 
    
    try {
        const events = await Event.find({
            tgId: from.id, 
            createdAt: {
                $gte: startOfDay,
                $lt: endOfDay
            }
        });

        if (events.length === 0){
            await ctx.reply('You have not sent any prompt for today, please send a prompt to get started!');
            return;
        }

        console.log('events', events);

        const completion = await openai.chat.completions.create({
            message: [
                {
                    role: 'system',
                    content: 'Act as a Senior Content Writer for a Company, you need to write highly engaging content about the upcoming events, and caption for the social media post.'
                },
                {
                    role: 'user',
                    content: `Write like a human, for humans. Message should sound formal and engaging: ${events.map(event => event.text).join(', ')}`
                },
            ],
            model: process.env.OPEN_AI_MODEL,
        });

        console.log('completion', completion);

        await User.findOneAndUpdate({tgId: from.id}, {
            $inc: {promptTokens: completion.usage.prompts, completionTokens: completion.usage.completions}
        });


        console.log('completion', completion.choices.message.content);

        await ctx.reply(completion.choices.message.content);

    } catch (err) {
        console.error('Error:', err);
        await ctx.reply('An error occurred while processing your request.');
    }
});




bot.on(message("text"), async (ctx) => {
    const text = ctx.update.message.text;

    
    console.log('text', text);
    try{
        await Event.create({
            text: messages,
            tgId: ctx.update.message.from.id
        });

        await ctx.reply(`I have received your prompt, please wait while I generate a highly engaging content for you!, to genrate now please enter /DO`);
    }
    catch(err){
        console.log(err);

        await ctx.reply('An error occured while trying to save your data, please try again later');
    }

   
});



         
        // IT WILL GENERATE BTWEEN 24 HRS
   
    




bot.launch()
process.once('SIGINT', () => bot.stop('SIGINT'))
process.once('SIGTERM', () => bot.stop('SIGTERM')) 